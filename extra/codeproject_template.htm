<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!--------------------------------------------------------------------------->  
<!--                           INTRODUCTION                                

 The Code Project article submission template (HTML version)

Using this template will help us post your article sooner. To use, just 
follow the 3 easy steps below:
 
     1. Fill in the article description details
     2. Add links to your images and downloads
     3. Include the main article text

That's all there is to it! All formatting will be done by our submission
scripts and style sheets. 

-->  
<!--------------------------------------------------------------------------->  
<!--                        IGNORE THIS SECTION                            -->
<html>
<head>
<title>Introduction to Green-forest Framework</title>
<Style>
BODY, P, TD { font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 10pt }
H2,H3,H4,H5 { color: #ff9900; font-weight: bold; }
H2 { font-size: 13pt; }
H3 { font-size: 12pt; }
H4 { font-size: 10pt; color: black; }
PRE { BACKGROUND-COLOR: #FBEDBB; FONT-FAMILY: "Courier New", Courier, mono; WHITE-SPACE: pre; }
CODE { COLOR: #990000; FONT-FAMILY: "Courier New", Courier, mono; }
</style>
<link rel="stylesheet" type="text/css" href="http://www.codeproject.com/App_Themes/Std/CodeProject.css">
</head>
<body bgcolor="#FFFFFF" color=#000000>
<!--------------------------------------------------------------------------->  


<!-------------------------------     STEP 1      --------------------------->
<!--  Fill in the details (CodeProject will reformat this section for you) -->

<pre>
Title:       Introduction to Green-forest Framework 
Author:      evgeny.dolganov
Email:       evgenij.dolganov@gmail.com
Language:    Java
Platform:    Windows, Unix, Mac
Technology:  JEE, Spring
Level:       Intermediate
Description: This is the introduction to Green-forest Framework with creating a web application example
Section      Languages
SubSection   Java
License:     CPOL
</pre>

<!-------------------------------     STEP 2      --------------------------->
<!--  Include download and sample image information.                       --> 

<ul class=download>
<li><a href="http://green-forest.googlecode.com/files/web-app-example.war">Download demo project - 2.2 Mb </a></li>
<li><a href="http://green-forest.googlecode.com/files/web-app-example-src.zip">Download source - 28 Kb</a></li>
</ul>

<p><img src="http://green-forest.googlecode.com/svn/trunk/reference-guide/i/gf-logo-label.png" alt="Green-forest Logo" width=240 height=164></p>


<!-------------------------------     STEP 3      --------------------------->

<!--  Add the article text. Please use simple formatting (<h2>, <p> etc)   -->
<h2>Introduction</h2>
Green-forest Framework is the simple IoC Container with Action-Handler architecture. 
It's not a competitor for Spring Framework or JEE but it's a powerful addition for these frameworks. 
You can use Green-forest for a single class implementation and for a complex business logic.

<p>
The Action-Handler architecture can be presents by this scheme:
<br>
<img src="http://green-forest.googlecode.com/svn/tags/0.9/reference-guide/i/action-handler-pattern.png"/>
<br>
As you see on the scheme we shared our logic into some classes:
<ol>
<li>
<h4>Action</h4>
Action class presents an "atomic business method" and contains input and output data:
<pre lang="java">
//Action with String input and Integer output data
public class SomeAction extends Action&lt;String, Integer>{
 
    public SomeAction(String input) {
        super(input);
    }
     
}</pre>
</li>
<li>
<h4>Handler</h4>
Handler class presents an implementation of business logic:
<pre lang="java">
@Mapping(SomeAction.class)
public class SomeHandler extends Handler&lt;SomeAction>{
 
    @Inject
    SomeService service;
     
    public void invoke(SomeAction action) throws Exception {
     
        String input = action.getInput();
        Integer result = service.doSomeWork(input);
         
        action.setOutput(result);
    }
}</pre>
	
</li>
<li>
<h4>Framework</h4>
Framework's Engine ensures functioning of handlers:
<pre lang="java">
//create Engine instance
Engine engine = new Engine();
 
//register the handler
engine.putHandler(SomeHandler.class);
 
//invoke the action
Integer result = engine.invoke(new SomeAction("some data"));
</pre>
</li>
</ol>




























<br><br><br><br><br>
****************************************************************************
<h2>Introduction</h2>

<p>What the article/code snippet does, why it's useful, the problem it solves etc. </p>

<h2>Background</h2>

<p>(Optional) Is there any background to this article that may be useful such as an introduction to the basic ideas presented? </p>

<h2>Using the code</h2>

<p>A brief description of how to use the article or code. The class names, the methods and properties, any tricks or tips. </p>

<p>Blocks of code should be set as style &quot;Formatted&quot; like this: </p>

<pre>//
// Any source code blocks look like this
//
var i = 0;
...</pre>

<p>Remember to set the Language of your code snippet using the Language dropdown. </p>

<p>Use the &quot;var&quot; button to wrap Variable or class names in &amp;lt;code&amp;gt; tags like <code>this</code>. </p>

<h2>Points of Interest</h2>

<p>Did you learn anything interesting/fun/annoying while writing the code? Did you do anything particularly clever or wild or zany? </p>

<h2>History</h2>

<p>Keep a running update of any changes or improvements you've made here. </p>

<!-------------------------------    That's it!   --------------------------->
</body>

</html>

